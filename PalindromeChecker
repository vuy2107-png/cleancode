import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
import java.util.Scanner;

public class PalindromeChecker {
    public static boolean isPalindrome(String input) {
        // Chuẩn hóa chuỗi: bỏ khoảng trắng, ký tự đặc biệt, chuyển về chữ thường
        String normalized = input.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();

        Stack<Character> stack = new Stack<>();
        Queue<Character> queue = new LinkedList<>();

        // Đưa từng ký tự vào stack và queue
        for (char c : normalized.toCharArray()) {
            stack.push(c);
            queue.offer(c);
        }

        // So sánh từng phần tử trong stack và queue
        while (!stack.isEmpty() && !queue.isEmpty()) {
            if (!stack.pop().equals(queue.poll())) {
                return false;
            }
        }

        return true;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Nhập chuỗi cần kiểm tra: ");
        String input = scanner.nextLine();

        if (isPalindrome(input)) {
            System.out.println(" Đây là chuỗi Palindrome!");
        } else {
            System.out.println(" Đây KHÔNG PHẢI là chuỗi Palindrome!");
        }

        // Một vài ví dụ kiểm thử sẵn
        System.out.println("\n=== Kiểm thử mẫu ===");
        String[] tests = {
            "Able was I ere I saw Elba",
            "Racecar",
            "hello",
            "Madam",
            "12321",
            "Java"
        };

        for (String test : tests) {
            System.out.printf("\"%s\" → %s%n", test,
                isPalindrome(test) ? "Palindrome" : "Not Palindrome");
        }
    }
}
